gASViloAAAAAAACMDmRvY3V0aWxzLm5vZGVzlIwIZG9jdW1lbnSUk5QpgZR9lCiMCXJhd3NvdXJjZZSMAJSMCGNoaWxkcmVulF2UaACMB3NlY3Rpb26Uk5QpgZR9lChoBWgGaAddlChoAIwFdGl0bGWUk5QpgZR9lChoBYw3Om1vZDpgZXRoZXJldW0uc3B1cmlvdXNfZHJhZ29uLnZtLmluc3RydWN0aW9ucy5zdG9yYWdlYJRoB12UKGgAjAlyZWZlcmVuY2WUk5QpgZR9lChoBWgGaAddlGgAjAdsaXRlcmFslJOUKYGUfZQoaAVoEmgHXZRoAIwEVGV4dJSTlIwwZXRoZXJldW0uc3B1cmlvdXNfZHJhZ29uLnZtLmluc3RydWN0aW9ucy5zdG9yYWdllIWUgZR9lChoBWgGjAZwYXJlbnSUaBuMCV9kb2N1bWVudJRoA4wGc291cmNllIyiL2hvbWUvcnVubmVyL3dvcmsvdHVybmtleS10cml1bXBoLTMyNjYwNl9TYW1LZW5YLWV0aC1leGVjdXRpb24tc3BlY3MvdHVybmtleS10cml1bXBoLTMyNjYwNl9TYW1LZW5YLWV0aC1leGVjdXRpb24tc3BlY3MvLnRveC9kb2NzL3N0YWdlMF9vdXQvYXV0b2FwaS8gPT4gZG9jL2RpZmZzlIwEbGluZZRLAHViYYwKYXR0cmlidXRlc5R9lCiMA2lkc5RdlIwHY2xhc3Nlc5RdlCiMBHhyZWaUjAJweZSMBnB5LW1vZJRljAVuYW1lc5RdlIwIZHVwbmFtZXOUXZSMCGJhY2tyZWZzlF2UdYwHdGFnbmFtZZRoGWgmTmgoTmgkaBZ1YmFoKX2UKGgrXZRoLV2UjA9jaGFuZ2UtcmVwbGFjZWSUYWgyXZRoNF2UaDZdlIwIaW50ZXJuYWyUiIwFcmVmaWSUjDdtb2R1bGUtZXRoZXJldW0uc3B1cmlvdXNfZHJhZ29uLnZtLmluc3RydWN0aW9ucy5zdG9yYWdllIwIcmVmdGl0bGWUjDBldGhlcmV1bS5zcHVyaW91c19kcmFnb24udm0uaW5zdHJ1Y3Rpb25zLnN0b3JhZ2WUdWg4aBRoJmgnaChLAGgkaBBoJWgDdWJoFSmBlH2UKGgFaAZoB12UaBopgZR9lChoBYwxOm1vZDpgZXRoZXJldW0uYnl6YW50aXVtLnZtLmluc3RydWN0aW9ucy5zdG9yYWdlYJRoB12UaB+MKmV0aGVyZXVtLmJ5emFudGl1bS52bS5pbnN0cnVjdGlvbnMuc3RvcmFnZZSFlIGUfZQoaAVoBmgkaEhoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UKIwEeHJlZpSMAnB5lIwGcHktbW9klGVoMl2UaDRdlGg2XZR1aDhoGWgmTmgoTmgkaEV1YmFoKX2UKGgrXZRoLV2UjBJjaGFuZ2UtcmVwbGFjZW1lbnSUYWgyXZRoNF2UaDZdlIwIaW50ZXJuYWyUiIwFcmVmaWSUjDFtb2R1bGUtZXRoZXJldW0uYnl6YW50aXVtLnZtLmluc3RydWN0aW9ucy5zdG9yYWdllIwIcmVmdGl0bGWUjCpldGhlcmV1bS5ieXphbnRpdW0udm0uaW5zdHJ1Y3Rpb25zLnN0b3JhZ2WUdWg4aBRoJmgnaChLAGgkaBBoJWgDdWJlaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGgOaCaMvi9ob21lL3J1bm5lci93b3JrL3R1cm5rZXktdHJpdW1waC0zMjY2MDZfU2FtS2VuWC1ldGgtZXhlY3V0aW9uLXNwZWNzL3R1cm5rZXktdHJpdW1waC0zMjY2MDZfU2FtS2VuWC1ldGgtZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL3NwdXJpb3VzX2RyYWdvbi92bS9pbnN0cnVjdGlvbnMvc3RvcmFnZS9pbmRleC5yc3SUaChLAmgkaAtoJWgDdWKMD3NwaGlueC5hZGRub2Rlc5SMBWluZGV4lJOUKYGUfZQoaAVoBmgHXZRoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UjAdlbnRyaWVzlF2UKIwEcGFpcpSMOG1vZHVsZTsgZXRoZXJldW0uc3B1cmlvdXNfZHJhZ29uLnZtLmluc3RydWN0aW9ucy5zdG9yYWdllIw3bW9kdWxlLWV0aGVyZXVtLnNwdXJpb3VzX2RyYWdvbi52bS5pbnN0cnVjdGlvbnMuc3RvcmFnZZRoBk50lGF1aDhobWgmaGtoKEsFaCRoC2glaAN1YmgKKYGUfZQoaAVoBmgHXZQoaA8pgZR9lChoBYwzRXRoZXJldW0gVmlydHVhbCBN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aAVoBmgHXZRoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UjAhjb2x3aWR0aJRLWnVoOGoAAgAAaCZOaChOaCRq/QEAAHViaACMBXRib2R5lJOUKYGUfZQoaAVoBmgHXZQoaACMA3Jvd5STlCmBlH2UKGgFaAZoB12UKGgAjAVlbnRyeZSTlCmBlH2UKGgFaAZoB12UaK0pgZR9lChoBYxFOm9iajpgc2xvYWQgPGV0aGVyZXVtLnNwdXJpb3VzX2RyYWdvbi52bS5pbnN0cnVjdGlvbnMuc3RvcmFnZS5zbG9hZD5glGgHXZRoFSmBlH2UKGgFaAZoB12UaBopgZR9lChoBWonAgAAaAddlGgfjAVzbG9hZJSFlIGUfZQoaAVoBmgkaiwCAABoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UKGgvjAJweZSMBnB5LW9iapRlaDJdlGg0XZRoNl2UdWg4aBloJk5oKE5oJGopAgAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlIwIaW50ZXJuYWyUiIwFcmVmaWSUjDZldGhlcmV1bS5zcHVyaW91c19kcmFnb24udm0uaW5zdHJ1Y3Rpb25zLnN0b3JhZ2Uuc2xvYWSUjAhyZWZ0aXRsZZSMNmV0aGVyZXVtLnNwdXJpb3VzX2RyYWdvbi52bS5pbnN0cnVjdGlvbnMuc3RvcmFnZS5zbG9hZJR1aDhoFGgmTmgoTmgkaiUCAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4aKxoJozPL2hvbWUvcnVubmVyL3dvcmsvdHVybmtleS10cml1bXBoLTMyNjYwNl9TYW1LZW5YLWV0aC1leGVjdXRpb24tc3BlY3MvdHVybmtleS10cml1bXBoLTMyNjYwNl9TYW1LZW5YLWV0aC1leGVjdXRpb24tc3BlY3MvZG9jL2F1dG9hcGkvZXRoZXJldW0vc3B1cmlvdXNfZHJhZ29uL3ZtL2luc3RydWN0aW9ucy9zdG9yYWdlL2luZGV4LnJzdDozMzo8YXV0b3N1bW1hcnk+lGgoSwFoJGoiAgAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGogAgAAaCZOaChOaCRqHQIAAHViaiECAAApgZR9lChoBWgGaAddlGitKYGUfZQoaAWM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aCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGqGAwAAaCZOaChOaCRqQwUAAHViZWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhqcwMAAGgmaGtoKE5oJGr/BAAAdWJlaCl9lChoK12UaC1dlChqPAUAAIwIZnVuY3Rpb26UZWgyXZRoNF2UaDZdlIwGZG9tYWlulGo8BQAAjAdvYmp0eXBllGp8BgAAjAhkZXNjdHlwZZRqfAYAAIwHbm9pbmRleJSJdWg4ahkDAABoJmgnaChLAGgkauMEAABoJWgDdWJqwwQAACmBlH2UKGgFWEADAABkZWYgc3N0b3JlKGV2bTogRXZtKSAtPiBOb25lOgogICAga2V5ID0gcG9wKGV2bS5zdGFjaykudG9fYmVfYnl0ZXMzMigpCiAgICBuZXdfdmFsdWUgPSBwb3AoZXZtLnN0YWNrKQogICAgY3VycmVudF92YWx1ZSA9IGdldF9zdG9yYWdlKGV2bS5lbnYuc3RhdGUsIGV2bS5tZXNzYWdlLmN1cnJlbnRfdGFyZ2V0LCBrZXkpCgogICAgIyBUT0RPOiBTU1RPUkUgZ2FzIHVzYWdlIGhhc24ndCBiZWVuIHRlc3RlZCB5ZXQuIFRlc3RpbmcgdGhpcyBuZWVkcwogICAgIyBvdGhlciBvcGNvZGVzIHRvIGJlIGltcGxlbWVudGVkLgogICAgIyBDYWxjdWxhdGluZyB0aGUgZ2FzIG5lZWRlZCBmb3IgdGhlIHN0b3JhZ2UKICAgIGlmIG5ld192YWx1ZSAhPSAwIGFuZCBjdXJyZW50X3ZhbHVlID09IDA6CiAgICAgICAgZ2FzX2Nvc3QgPSBHQVNfU1RPUkFHRV9TRVQKICAgIGVsc2U6CiAgICAgICAgZ2FzX2Nvc3QgPSBHQVNfU1RPUkFHRV9VUERBVEUKCiAgICBldm0uZ2FzX2xlZnQgPSBzdWJ0cmFjdF9nYXMoZXZtLmdhc19sZWZ0LCBnYXNfY29zdCkKCiAgICAjIFRPRE86IFJlZnVuZCBjb3VudGVyIGhhc24ndCBiZWVuIHRlc3RlZCB5ZXQuIFRlc3RpbmcgdGhpcyBuZWVkcyBvdGhlcgogICAgIyBPcGNvZGVzIHRvIGJlIGltcGxlbWVudGVkCiAgICBpZiBuZXdfdmFsdWUgPT0gMCBhbmQgY3VycmVudF92YWx1ZSAhPSAwOgogICAgICAgIGV2bS5yZWZ1bmRfY291bnRlciArPSBHQVNfU1RPUkFHRV9DTEVBUl9SRUZVTkQKCiAgICBzZXRfc3RvcmFnZShldm0uZW52LnN0YXRlLCBldm0ubWVzc2FnZS5jdXJyZW50X3RhcmdldCwga2V5LCBuZXdfdmFsdWUpCgogICAgZXZtLnBjICs9IDEKlGgHXZQoaB+MImRlZiBzc3RvcmUoZXZtOiBFdm0pIC0+IE5vbmU6CiAgICCUhZSBlH2UKGgFaAZoJGqEBgAAaCVoA2gmaCdoKEsAdWJqRgMAACmBlH2UKGgFaAZoB12UaB+MPGVuc3VyZShub3QgZXZtLm1lc3NhZ2UuaXNfc3RhdGljLCBXcml0ZUluU3RhdGljQ29udGV4dCkKICAgIJSFlIGUfZQoaAVoBmgkaowGAABoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UjAxjaGFuZ2UtYWRkZWSUYWgyXZRoNF2UaDZdlHVoOGpFAwAAaCRqhAYAAGglaANoJmgnaChLAHViaB9YHgMAAGtleSA9IHBvcChldm0uc3RhY2spLnRvX2JlX2J5dGVzMzIoKQogICAgbmV3X3ZhbHVlID0gcG9wKGV2bS5zdGFjaykKICAgIGN1cnJlbnRfdmFsdWUgPSBnZXRfc3RvcmFnZShldm0uZW52LnN0YXRlLCBldm0ubWVzc2FnZS5jdXJyZW50X3RhcmdldCwga2V5KQoKICAgICMgVE9ETzogU1NUT1JFIGdhcyB1c2FnZSBoYXNuJ3QgYmVlbiB0ZXN0ZWQgeWV0LiBUZXN0aW5nIHRoaXMgbmVlZHMKICAgICMgb3RoZXIgb3Bjb2RlcyB0byBiZSBpbXBsZW1lbnRlZC4KICAgICMgQ2FsY3VsYXRpbmcgdGhlIGdhcyBuZWVkZWQgZm9yIHRoZSBzdG9yYWdlCiAgICBpZiBuZXdfdmFsdWUgIT0gMCBhbmQgY3VycmVudF92YWx1ZSA9PSAwOgogICAgICAgIGdhc19jb3N0ID0gR0FTX1NUT1JBR0VfU0VUCiAgICBlbHNlOgogICAgICAgIGdhc19jb3N0ID0gR0FTX1NUT1JBR0VfVVBEQVRFCgogICAgZXZtLmdhc19sZWZ0ID0gc3VidHJhY3RfZ2FzKGV2bS5nYXNfbGVmdCwgZ2FzX2Nvc3QpCgogICAgIyBUT0RPOiBSZWZ1bmQgY291bnRlciBoYXNuJ3QgYmVlbiB0ZXN0ZWQgeWV0LiBUZXN0aW5nIHRoaXMgbmVlZHMgb3RoZXIKICAgICMgT3Bjb2RlcyB0byBiZSBpbXBsZW1lbnRlZAogICAgaWYgbmV3X3ZhbHVlID09IDAgYW5kIGN1cnJlbnRfdmFsdWUgIT0gMDoKICAgICAgICBldm0ucmVmdW5kX2NvdW50ZXIgKz0gR0FTX1NUT1JBR0VfQ0xFQVJfUkVGVU5ECgogICAgc2V0X3N0b3JhZ2UoZXZtLmVudi5zdGF0ZSwgZXZtLm1lc3NhZ2UuY3VycmVudF90YXJnZXQsIGtleSwgbmV3X3ZhbHVlKQoKICAgIGV2bS5wYyArPSAxCpSFlIGUfZQoaAVoBmgkaoQGAABoJWgDaCZoJ2goSwB1YmVoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UjAZzb3VyY2WUjK8vaG9tZS9ydW5uZXIvd29yay90dXJua2V5LXRyaXVtcGgtMzI2NjA2X1NhbUtlblgtZXRoLWV4ZWN1dGlvbi1zcGVjcy90dXJua2V5LXRyaXVtcGgtMzI2NjA2X1NhbUtlblgtZXRoLWV4ZWN1dGlvbi1zcGVjcy9zcmMvZXRoZXJldW0vc3B1cmlvdXNfZHJhZ29uL3ZtL2luc3RydWN0aW9ucy9zdG9yYWdlLnB5lIwJeG1sOnNwYWNllGrdAgAAjAVmb3JjZZSJjAhsYW5ndWFnZZSMBnB5dGhvbpSMDmhpZ2hsaWdodF9hcmdzlH2UatoEAABLAXOMB2xpbmVub3OUiXVoOGrCBAAAaCZoa2goS0xoJGrjBAAAaCVoA3ViZWgpfZQoaCtdlGpwAQAAYWgtXZRoMl2UjAZzc3RvcmWUYWg0XZRoNl2UdWg4aAloJmhraChLPGgkauwCAABoJWgDdWJlaCl9lChoK12Uai8BAABhaC1dlGgyXZSMDm1vZHVsZSBkZXRhaWxzlGFoNF2UaDZdlHVoOGgJaCZoa2goSyNoJGh+aCVoA3ViZWgpfZQoaCtdlIwxZXRoZXJldW0tdmlydHVhbC1tYWNoaW5lLWV2bS1zdG9yYWdlLWluc3RydWN0aW9uc5RhaC1dlGgyXZSMM2V0aGVyZXVtIHZpcnR1YWwgbWFjaGluZSAoZXZtKSBzdG9yYWdlIGluc3RydWN0aW9uc5RhaDRdlGg2XZR1aDhoCWgmaGtoKEsHaCRoC2glaAN1YmVoKX2UKGgrXZQoaHyMMGV0aGVyZXVtLXNwdXJpb3VzLWRyYWdvbi12bS1pbnN0cnVjdGlvbnMtc3RvcmFnZZRlaC1dlGgyXZSMMGV0aGVyZXVtLnNwdXJpb3VzX2RyYWdvbi52bS5pbnN0cnVjdGlvbnMuc3RvcmFnZZRhaDRdlGg2XZR1aDhoCWgmaGtoKEsCaCRoA2glaAN1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UjAZzb3VyY2WUaCd1aDhoAYwOY3VycmVudF9zb3VyY2WUaCeMDGN1cnJlbnRfbGluZZRLAIwIc2V0dGluZ3OUjBFkb2N1dGlscy5mcm9udGVuZJSMBlZhbHVlc5STlCmBlH2UKIwMcmVwb3J0X2xldmVslEsCjApoYWx0X2xldmVslEsEjBFleGl0X3N0YXR1c19sZXZlbJRLBYwFZGVidWeUTowOd2FybmluZ19zdHJlYW2UTowJdHJhY2ViYWNrlE6MD291dHB1dF9lbmNvZGluZ5SMBXV0Zi04lIwdb3V0cHV0X2VuY29kaW5nX2Vycm9yX2hhbmRsZXKUjBF4bWxjaGFycmVmcmVwbGFjZZSMDmVycm9yX2VuY29kaW5nlIwFdXRmLTiUjBxlcnJvcl9lbmNvZGluZ19lcnJvcl9oYW5kbGVylIwQYmFja3NsYXNocmVwbGFjZZSME3JlY29yZF9kZXBlbmRlbmNpZXOUjA5kb2N1dGlscy51dGlsc5SMDkRlcGVuZGVuY3lMaXN0lJOUKYGUfZQojARsaXN0lF2UjARmaWxllE51YowGY29uZmlnlE6MDWR1bXBfc2V0dGluZ3OUTowOZHVtcF9pbnRlcm5hbHOUTowPZHVtcF90cmFuc2Zvcm1zlE6MD2R1bXBfcHNldWRvX3htbJROjBBleHBvc2VfaW50ZXJuYWxzlE6MDnN0cmljdF92aXNpdG9ylE6MD19kaXNhYmxlX2NvbmZpZ5ROjAdfc291cmNllE6MDF9kZXN0aW5hdGlvbpSMSmRvYy9kaWZmcy9zcHVyaW91c19kcmFnb25fYnl6YW50aXVtL3ZtL2luc3RydWN0aW9ucy9zdG9yYWdlL2luZGV4LnBpY2tsZTY0lIwNX2NvbmZpZ19maWxlc5RdlIwRbGluZV9sZW5ndGhfbGltaXSUTRAnjAl0YWJfd2lkdGiUSwiMEHN5bnRheF9oaWdobGlnaHSUjARsb25nlIwMc21hcnRfcXVvdGVzlImME3NtYXJ0cXVvdGVzX2xvY2FsZXOUTowdY2hhcmFjdGVyX2xldmVsX2lubGluZV9tYXJrdXCUiYwGd3JpdGVylIwDeG1slIwZY29tcGFyZV9zZWN0aW9uc19ieV9uYW1lc5SJjAxkdW1wX3JzdGRpZmaUTowFX2JvdGiUfZQoaA5OjAlnZW5lcmF0b3KUTowJZGF0ZXN0YW1wlE6MC3NvdXJjZV9saW5rlE6MCnNvdXJjZV91cmyUTowNdG9jX2JhY2tsaW5rc5RqIAIAAIwSZm9vdG5vdGVfYmFja2xpbmtzlEsBjA1zZWN0bnVtX3hmb3JtlEsBjA5kb2N0aXRsZV94Zm9ybZRLAYwNZG9jaW5mb194Zm9ybZRLAYwSc2VjdHN1YnRpdGxlX3hmb3JtlEsAjA5zdHJpcF9jb21tZW50c5ROjA5pbnB1dF9lbmNvZGluZ5ROjBxpbnB1dF9lbmNvZGluZ19lcnJvcl9oYW5kbGVylIwGc3RyaWN0lIwNbGFuZ3VhZ2VfY29kZZSMAmVulIwOcGVwX3JlZmVyZW5jZXOUTowMcGVwX2Jhc2VfdXJslIwfaHR0cDovL3d3dy5weXRob24ub3JnL2Rldi9wZXBzL5SMFXBlcF9maWxlX3VybF90ZW1wbGF0ZZSMCHBlcC0lMDRklIwOcmZjX3JlZmVyZW5jZXOUTowMcmZjX2Jhc2VfdXJslIwbaHR0cDovL3Rvb2xzLmlldGYub3JnL2h0bWwvlIwddHJpbV9mb290bm90ZV9yZWZlcmVuY2Vfc3BhY2WUTowWZmlsZV9pbnNlcnRpb25fZW5hYmxlZJRLAYwLcmF3X2VuYWJsZWSUSwGMDmF1dG9faWRfcHJlZml4lIwCaWSUjAlpZF9wcmVmaXiUaAaMG3N0cmlwX2VsZW1lbnRzX3dpdGhfY2xhc3Nlc5ROjA1zdHJpcF9jbGFzc2VzlE51jARib3RolH2UjApfb3B0aW9uc1RvlIwFX2JvdGiUjAtfb2xkX3NvdXJjZZSMlS9ob21lL3J1bm5lci93b3JrL3R1cm5rZXktdHJpdW1waC0zMjY2MDZfU2FtS2VuWC1ldGgtZXhlY3V0aW9uLXNwZWNzL3R1cm5rZXktdHJpdW1waC0zMjY2MDZfU2FtS2VuWC1ldGgtZXhlY3V0aW9uLXNwZWNzLy50b3gvZG9jcy9zdGFnZTBfb3V0L2F1dG9hcGkvlIwLX25ld19zb3VyY2WUjAlkb2MvZGlmZnOUahkHAABqGgcAAHVijAhyZXBvcnRlcpROjBBpbmRpcmVjdF90YXJnZXRzlF2UjBFzdWJzdGl0dXRpb25fZGVmc5R9lIwSc3Vic3RpdHV0aW9uX25hbWVzlH2UjAhyZWZuYW1lc5R9lIwGcmVmaWRzlH2UjAduYW1laWRzlH2UjAluYW1ldHlwZXOUfZRoK32UjA1mb290bm90ZV9yZWZzlH2UjA1jaXRhdGlvbl9yZWZzlH2UjA1hdXRvZm9vdG5vdGVzlF2UjBFhdXRvZm9vdG5vdGVfcmVmc5RdlIwQc3ltYm9sX2Zvb3Rub3Rlc5RdlIwUc3ltYm9sX2Zvb3Rub3RlX3JlZnOUXZSMCWZvb3Rub3Rlc5RdlIwJY2l0YXRpb25zlF2UjBJhdXRvZm9vdG5vdGVfc3RhcnSUSwGMFXN5bWJvbF9mb290bm90ZV9zdGFydJRLAIwKaWRfY291bnRlcpSMC2NvbGxlY3Rpb25zlIwHQ291bnRlcpSTlH2UhZRSlIwOcGFyc2VfbWVzc2FnZXOUXZSMEnRyYW5zZm9ybV9tZXNzYWdlc5RdlIwLdHJhbnNmb3JtZXKUTowLaW5jbHVkZV9sb2eUXZSMCmRlY29yYXRpb26UTmglaAN1Yi4=